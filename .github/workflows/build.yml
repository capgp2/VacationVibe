name: "Build and Infrastructure"
on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform with specified version on the runner
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        # Build a docker container and push it to ECR 
        cd backend
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        echo "Pushing image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

  DeployDev:
    name: Deploy to Dev 
    if: github.event_name == 'pull_request'
    needs: [build]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform/envs/stage
    environment: 
      name: Development
    steps:
      - name: Terraform init
        id: init
        run: terraform init 
        
      - name: Terraform plan
        id: plan
        run: terraform plan -input=false
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve -input=false

  DeployStaging:
    name: Deploy to Staging 
    if: github.event.ref == 'refs/heads/main'
    needs: [build]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform/envs/stage
    environment: 
      name: Staging
    steps:
      - name: Terraform init
        id: init
        run: terraform init 
        
      - name: Terraform plan
        id: plan
        run: terraform plan -input=false
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve -input=false

  DeployProd:
    name: Deploy to Production 
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform/envs/stage
    environment: 
      name: Production
      url: 'https://philemonnwanne.me'
    steps:
      - name: Deploy
        run: echo Deploying to production